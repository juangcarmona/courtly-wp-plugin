name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 0.0.1)'
        required: true
      notes:
        description: 'Optional release notes'
        required: false

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install gettext
        run: sudo apt-get update && sudo apt-get install -y gettext

      - name: Compile .po to .mo files
        working-directory: src/languages
        run: |
          for file in *.po; do
            msgfmt "$file" -o "${file%.po}.mo"
          done

      - name: Validate .mo files
        working-directory: src/languages
        run: |
          po_count=$(ls -1 *.po | wc -l)
          mo_count=$(ls -1 *.mo | wc -l)
          if [ "$po_count" -ne "$mo_count" ]; then
            echo "Mismatch between .po and .mo files. Failing."
            exit 1
          fi

      - name: Find available tag
        id: find_tag
        run: |
          base="v${{ github.event.inputs.version }}"
          tag="$base"
          counter=2

          while git rev-parse "$tag" >/dev/null 2>&1; do
            tag="${base}v${counter}"
            counter=$((counter + 1))
          done

          echo "Using tag: $tag"
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Generate courtly.zip with plugin root
        run: |
          mkdir -p build/courtly
          cp -r src/* build/courtly/
          cd build
          zip -r courtly.zip courtly

      - name: Prepare release notes
        run: |
          if [ -n "${{ github.event.inputs.notes }}" ]; then
            echo "${{ github.event.inputs.notes }}" > notes.md
          else
            echo "Manual release for version ${{ github.event.inputs.version }}" > notes.md
          fi

      - name: Create GitHub release using gh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.find_tag.outputs.tag }} \
            build/courtly.zip \
            --title "Release ${{ steps.find_tag.outputs.tag }}" \
            --notes-file notes.md
